#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBD("../../dbd/CryoconM32.dbd")
#! DBDEND


# # The readback of the time over which statistics have been collected.
record(ai, "$(tctrlr):STS:STATS:TIME") {
  field(DESC, "Sample Time for stats.")
  field(DTYP, "stream")
  field(SCAN, "5 second")
  field(PINI, "YES")
  field(INP, "@CryoconM32.protocol getStatsTime $(port)")
  field(EGU, "s")
}

# # Command to reset the statistics and start collecting them again.
# # Not seen this work.
record(ao, "$(tctrlr):DMD:STATS:RESET") {
  field(DESC, "Rezero statistics collected.")
  field(DTYP, "stream")
  field(FLNK, "$(tctrlr):STS:STATS:TIME")
  field(OUT, "@CryoconM32.protocol resetStats $(port)")
  field(EGU, "s")
}

# # Readback of the heater sink temperature.
record(ai, "$(tctrlr):STS:SINKTEMP") {
  field(DESC, "Temp of the heat sink.")
  field(SCAN, "5 second")
  field(PINI, "YES")
  field(INP, "@CryoconM32.protocol getSinkT $(port)")
  field(PREC, "3")
  field(EGU, "$(egu)")
}

# #  Readback of the ambient temperature inside the instrument.
record(stringin, "$(tctrlr):STS:AMBIENTTEMP") {
  field(DESC, "Temp inside M32 unit.")
  field(SCAN, "5 second")
  field(PINI, "YES")
  field(INP, "@CryoconM32.protocol getAmbientT $(port)")
}

# # Readback of model information
record(stringin, "$(tctrlr):SYS:MODEL") {
  field(DESC, "Full model, fw & hw info.")
  field(DTYP, "stream")
  field(INP, "@CryoconM32.protocol getModel $(port)")
  field(PINI, "YES")
}

# # Readback of the instrument name.
record(stringin, "$(tctrlr):SYS:CONTROLLERNAME") {
  field(DESC, "Name of this controller.")
  field(DTYP, "stream")
  field(INP, "@CryoconM32.protocol getControllerName $(port)")
  field(PINI, "YES")
}

# # Readback of the firmware revision level.
record(stringin, "$(tctrlr):SYS:FWREV") {
  field(DESC, "Firmware Revision Level")
  field(DTYP, "stream")
  field(INP, "@CryoconM32.protocol getFirmwareRev $(port)")
  field(PINI, "YES")
}

# # Readback of the hardware revision level.
record(stringin, "$(tctrlr):SYS:HWREV") {
  field(DESC, "Hardware Revision Level")
  field(DTYP, "stream")
  field(INP, "@CryoconM32.protocol getHardwareRev $(port)")
  field(PINI, "YES")
}

# # Command to reseed the Averaging Filter
record(stringout, "$(tctrlr):DMD:RESEED") {
  field(DESC, "Reseed Avg Filter")
  field(DTYP, "stream")
  field(OUT, "@CryoconM32.protocol reseed $(port)")
}

#! Further lines contain data used by VisualDCT
#! View(0,0,1.0)
#! Record("$(tctrlr):STS:STATS:TIME",640,688,0,0,"$(tctrlr):STS:STATS:TIME")
#! Record("$(tctrlr):DMD:STATS:RESET",360,614,0,1,"$(tctrlr):DMD:STATS:RESET")
#! Field("$(tctrlr):DMD:STATS:RESET.FLNK",16777215,1,"$(tctrlr):DMD:STATS:RESET.FLNK")
#! Link("$(tctrlr):DMD:STATS:RESET.FLNK","$(tctrlr):STS:STATS:TIME")
#! Record("$(tctrlr):STS:SINKTEMP",720,414,0,1,"$(tctrlr):STS:SINKTEMP")
#! Record("$(tctrlr):STS:AMBIENTTEMP",720,268,0,1,"$(tctrlr):STS:AMBIENTTEMP")
#! Record("$(tctrlr):SYS:MODEL",340,48,0,1,"$(tctrlr):SYS:MODEL")
#! Record("$(tctrlr):SYS:CONTROLLERNAME",380,208,0,1,"$(tctrlr):SYS:CONTROLLERNAME")
#! Record("$(tctrlr):SYS:FWREV",80,248,0,1,"$(tctrlr):SYS:FWREV")
#! Record("$(tctrlr):SYS:HWREV",80,408,0,1,"$(tctrlr):SYS:HWREV")
#! Record("$(tctrlr):DMD:RESEED",60,82,0,1,"$(tctrlr):DMD:RESEED")
